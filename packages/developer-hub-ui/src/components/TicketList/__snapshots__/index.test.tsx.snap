// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`describe when the TicketList Component is given showAddTicketDialog as false TicketList should show the addTicketDialog open as false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketList
    addTicket={[Function]}
    addTicketToSprint={[Function]}
    closeTicket={[Function]}
    fetchTickets={[Function]}
    setShowAddTicketDialog={[Function]}
    showAddTicketDialog={false}
    tickets={
        Array [
            Object {
              "_id": "id1",
              "deleted": false,
              "description": "description",
              "storyPoint": 3,
              "title": "ticketTitle",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Button)
          onClick={[Function]}
          title="Add Ticket"
>
           Add Ticket 
</WithStyles(Button)>,
        <h1>
          Open
</h1>,
        <TicketTable
          onAddTicketToSprint={[Function]}
          onDelete={[Function]}
          tickets={
                    Array [
                              Object {
                                "_id": "id1",
                                "deleted": false,
                                "description": "description",
                                "storyPoint": 3,
                                "title": "ticketTitle",
                              },
                            ]
          }
/>,
        <h1>
          Closed
</h1>,
        <TicketTable
          tickets={Array []}
/>,
        <Connect(AddTicketDialog)
          onRequestClose={[Function]}
          open={false}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " Add Ticket ",
          "onClick": [Function],
          "title": "Add Ticket",
        },
        "ref": null,
        "rendered": " Add Ticket ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Open",
        },
        "ref": null,
        "rendered": "Open",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onAddTicketToSprint": [Function],
          "onDelete": [Function],
          "tickets": Array [
            Object {
              "_id": "id1",
              "deleted": false,
              "description": "description",
              "storyPoint": 3,
              "title": "ticketTitle",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Closed",
        },
        "ref": null,
        "rendered": "Closed",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "tickets": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onRequestClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Button)
            onClick={[Function]}
            title="Add Ticket"
>
             Add Ticket 
</WithStyles(Button)>,
          <h1>
            Open
</h1>,
          <TicketTable
            onAddTicketToSprint={[Function]}
            onDelete={[Function]}
            tickets={
                        Array [
                                    Object {
                                      "_id": "id1",
                                      "deleted": false,
                                      "description": "description",
                                      "storyPoint": 3,
                                      "title": "ticketTitle",
                                    },
                                  ]
            }
/>,
          <h1>
            Closed
</h1>,
          <TicketTable
            tickets={Array []}
/>,
          <Connect(AddTicketDialog)
            onRequestClose={[Function]}
            open={false}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Add Ticket ",
            "onClick": [Function],
            "title": "Add Ticket",
          },
          "ref": null,
          "rendered": " Add Ticket ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Open",
          },
          "ref": null,
          "rendered": "Open",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onAddTicketToSprint": [Function],
            "onDelete": [Function],
            "tickets": Array [
              Object {
                "_id": "id1",
                "deleted": false,
                "description": "description",
                "storyPoint": 3,
                "title": "ticketTitle",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Closed",
          },
          "ref": null,
          "rendered": "Closed",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "tickets": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onRequestClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`describe when the TicketList Component is given showAddTicketDialog as true TicketList should show the addTicketDialog open as true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketList
    addTicket={[Function]}
    addTicketToSprint={[Function]}
    closeTicket={[Function]}
    fetchTickets={[Function]}
    setShowAddTicketDialog={[Function]}
    showAddTicketDialog={true}
    tickets={
        Array [
            Object {
              "_id": "id1",
              "deleted": false,
              "description": "description",
              "storyPoint": 3,
              "title": "ticketTitle",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Button)
          onClick={[Function]}
          title="Add Ticket"
>
           Add Ticket 
</WithStyles(Button)>,
        <h1>
          Open
</h1>,
        <TicketTable
          onAddTicketToSprint={[Function]}
          onDelete={[Function]}
          tickets={
                    Array [
                              Object {
                                "_id": "id1",
                                "deleted": false,
                                "description": "description",
                                "storyPoint": 3,
                                "title": "ticketTitle",
                              },
                            ]
          }
/>,
        <h1>
          Closed
</h1>,
        <TicketTable
          tickets={Array []}
/>,
        <Connect(AddTicketDialog)
          onRequestClose={[Function]}
          open={true}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": " Add Ticket ",
          "onClick": [Function],
          "title": "Add Ticket",
        },
        "ref": null,
        "rendered": " Add Ticket ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Open",
        },
        "ref": null,
        "rendered": "Open",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onAddTicketToSprint": [Function],
          "onDelete": [Function],
          "tickets": Array [
            Object {
              "_id": "id1",
              "deleted": false,
              "description": "description",
              "storyPoint": 3,
              "title": "ticketTitle",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Closed",
        },
        "ref": null,
        "rendered": "Closed",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "tickets": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onRequestClose": [Function],
          "open": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Button)
            onClick={[Function]}
            title="Add Ticket"
>
             Add Ticket 
</WithStyles(Button)>,
          <h1>
            Open
</h1>,
          <TicketTable
            onAddTicketToSprint={[Function]}
            onDelete={[Function]}
            tickets={
                        Array [
                                    Object {
                                      "_id": "id1",
                                      "deleted": false,
                                      "description": "description",
                                      "storyPoint": 3,
                                      "title": "ticketTitle",
                                    },
                                  ]
            }
/>,
          <h1>
            Closed
</h1>,
          <TicketTable
            tickets={Array []}
/>,
          <Connect(AddTicketDialog)
            onRequestClose={[Function]}
            open={true}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": " Add Ticket ",
            "onClick": [Function],
            "title": "Add Ticket",
          },
          "ref": null,
          "rendered": " Add Ticket ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Open",
          },
          "ref": null,
          "rendered": "Open",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onAddTicketToSprint": [Function],
            "onDelete": [Function],
            "tickets": Array [
              Object {
                "_id": "id1",
                "deleted": false,
                "description": "description",
                "storyPoint": 3,
                "title": "ticketTitle",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Closed",
          },
          "ref": null,
          "rendered": "Closed",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "tickets": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onRequestClose": [Function],
            "open": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
