// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`describe when the AddTicketDialog Component is given open as false AddTicketDialog should show the addTicketDialog open property as false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddTicketDialog
    addTicket={[Function]}
    description="description"
    onRequestClose={[Function]}
    open={false}
    setDescription={[Function]}
    setStoryPoint={[Function]}
    setTitle={[Function]}
    storyPoint={5}
    title="title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(DialogTitle)
          id="form-dialog-title"
>
          Create a Ticket
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <form
                    autoComplete="off"
          >
                    <WithStyles(FormControl)>
                              <TextField
                                        autoFocus={true}
                                        fullWidth={true}
                                        id="name"
                                        label="Title"
                                        margin="dense"
                                        onChange={[Function]}
                                        required={true}
                                        select={false}
                                        type="text"
                                        value="title"
                              />
                    </WithStyles(FormControl)>
                    <WithStyles(FormControl)>
                              <TextField
                                        fullWidth={true}
                                        id="multiline-flexible"
                                        label="Description"
                                        margin="dense"
                                        multiline={true}
                                        onChange={[Function]}
                                        required={false}
                                        select={false}
                                        value="description"
                              />
                    </WithStyles(FormControl)>
                    <WithStyles(FormControl)>
                              <WithStyles(InputLabel)
                                        htmlFor="age-simple"
                              >
                                        Story Point
                              </WithStyles(InputLabel)>
                              <WithStyles(Select)
                                        inputProps={
                                                  Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                                        }
                                        onChange={[Function]}
                                        value={5}
                              >
                                        <WithStyles(MenuItem)
                                                  value=""
                                        >
                                                  <em>
                                                            None
                                                  </em>
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={0.1}
                                        >
                                                  0.1
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={1}
                                        >
                                                  1
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={2}
                                        >
                                                  2
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={3}
                                        >
                                                  3
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={5}
                                        >
                                                  5
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={8}
                                        >
                                                  8
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={13}
                                        >
                                                  13
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={21}
                                        >
                                                  21
                                        </WithStyles(MenuItem)>
                              </WithStyles(Select)>
                    </WithStyles(FormControl)>
          </form>
</WithStyles(DialogContent)>,
        <WithStyles(DialogActions)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Cancel
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Create
          </WithStyles(Button)>
</WithStyles(DialogActions)>,
      ],
      "fullWidth": true,
      "onExit": [Function],
      "open": false,
      "title": "Dialog With Actions",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Create a Ticket",
          "id": "form-dialog-title",
        },
        "ref": null,
        "rendered": "Create a Ticket",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            autoComplete="off"
>
            <WithStyles(FormControl)>
                        <TextField
                                    autoFocus={true}
                                    fullWidth={true}
                                    id="name"
                                    label="Title"
                                    margin="dense"
                                    onChange={[Function]}
                                    required={true}
                                    select={false}
                                    type="text"
                                    value="title"
                        />
            </WithStyles(FormControl)>
            <WithStyles(FormControl)>
                        <TextField
                                    fullWidth={true}
                                    id="multiline-flexible"
                                    label="Description"
                                    margin="dense"
                                    multiline={true}
                                    onChange={[Function]}
                                    required={false}
                                    select={false}
                                    value="description"
                        />
            </WithStyles(FormControl)>
            <WithStyles(FormControl)>
                        <WithStyles(InputLabel)
                                    htmlFor="age-simple"
                        >
                                    Story Point
                        </WithStyles(InputLabel)>
                        <WithStyles(Select)
                                    inputProps={
                                                Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                                    }
                                    onChange={[Function]}
                                    value={5}
                        >
                                    <WithStyles(MenuItem)
                                                value=""
                                    >
                                                <em>
                                                            None
                                                </em>
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={0.1}
                                    >
                                                0.1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={1}
                                    >
                                                1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={2}
                                    >
                                                2
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={3}
                                    >
                                                3
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={5}
                                    >
                                                5
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={8}
                                    >
                                                8
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={13}
                                    >
                                                13
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={21}
                                    >
                                                21
                                    </WithStyles(MenuItem)>
                        </WithStyles(Select)>
            </WithStyles(FormControl)>
</form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              <WithStyles(FormControl)>
                <TextField
                                autoFocus={true}
                                fullWidth={true}
                                id="name"
                                label="Title"
                                margin="dense"
                                onChange={[Function]}
                                required={true}
                                select={false}
                                type="text"
                                value="title"
                />
</WithStyles(FormControl)>,
              <WithStyles(FormControl)>
                <TextField
                                fullWidth={true}
                                id="multiline-flexible"
                                label="Description"
                                margin="dense"
                                multiline={true}
                                onChange={[Function]}
                                required={false}
                                select={false}
                                value="description"
                />
</WithStyles(FormControl)>,
              <WithStyles(FormControl)>
                <WithStyles(InputLabel)
                                htmlFor="age-simple"
                >
                                Story Point
                </WithStyles(InputLabel)>
                <WithStyles(Select)
                                inputProps={
                                                Object {
                                                                "id": "age-simple",
                                                                "name": "age",
                                                              }
                                }
                                onChange={[Function]}
                                value={5}
                >
                                <WithStyles(MenuItem)
                                                value=""
                                >
                                                <em>
                                                                None
                                                </em>
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={0.1}
                                >
                                                0.1
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={1}
                                >
                                                1
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={2}
                                >
                                                2
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={3}
                                >
                                                3
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={5}
                                >
                                                5
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={8}
                                >
                                                8
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={13}
                                >
                                                13
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={21}
                                >
                                                21
                                </WithStyles(MenuItem)>
                </WithStyles(Select)>
</WithStyles(FormControl)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextField
                  autoFocus={true}
                  fullWidth={true}
                  id="name"
                  label="Title"
                  margin="dense"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="text"
                  value="title"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "autoFocus": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Title",
                  "margin": "dense",
                  "onChange": [Function],
                  "required": true,
                  "select": false,
                  "type": "text",
                  "value": "title",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextField
                  fullWidth={true}
                  id="multiline-flexible"
                  label="Description"
                  margin="dense"
                  multiline={true}
                  onChange={[Function]}
                  required={false}
                  select={false}
                  value="description"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "fullWidth": true,
                  "id": "multiline-flexible",
                  "label": "Description",
                  "margin": "dense",
                  "multiline": true,
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "value": "description",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(InputLabel)
                    htmlFor="age-simple"
>
                    Story Point
</WithStyles(InputLabel)>,
                  <WithStyles(Select)
                    inputProps={
                                        Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                    }
                    onChange={[Function]}
                    value={5}
>
                    <WithStyles(MenuItem)
                                        value=""
                    >
                                        <em>
                                                            None
                                        </em>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={0.1}
                    >
                                        0.1
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={1}
                    >
                                        1
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={2}
                    >
                                        2
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={3}
                    >
                                        3
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={5}
                    >
                                        5
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={8}
                    >
                                        8
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={13}
                    >
                                        13
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={21}
                    >
                                        21
                    </WithStyles(MenuItem)>
</WithStyles(Select)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Story Point",
                    "htmlFor": "age-simple",
                  },
                  "ref": null,
                  "rendered": "Story Point",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(MenuItem)
                        value=""
>
                        <em>
                                                None
                        </em>
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={0.1}
>
                        0.1
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={1}
>
                        1
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={2}
>
                        2
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={3}
>
                        3
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={5}
>
                        5
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={8}
>
                        8
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={13}
>
                        13
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={21}
>
                        21
</WithStyles(MenuItem)>,
                    ],
                    "inputProps": Object {
                      "id": "age-simple",
                      "name": "age",
                    },
                    "onChange": [Function],
                    "value": 5,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <em>
                          None
</em>,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "None",
                        },
                        "ref": null,
                        "rendered": "None",
                        "type": "em",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "0.1",
                        "value": 0.1,
                      },
                      "ref": null,
                      "rendered": "0.1",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "1",
                        "value": 1,
                      },
                      "ref": null,
                      "rendered": "1",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "2",
                        "value": 2,
                      },
                      "ref": null,
                      "rendered": "2",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "3",
                        "value": 3,
                      },
                      "ref": null,
                      "rendered": "3",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "5",
                        "value": 5,
                      },
                      "ref": null,
                      "rendered": "5",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "8",
                        "value": 8,
                      },
                      "ref": null,
                      "rendered": "8",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "13",
                        "value": 13,
                      },
                      "ref": null,
                      "rendered": "13",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "21",
                        "value": 21,
                      },
                      "ref": null,
                      "rendered": "21",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Cancel
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Create
</WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Cancel",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Create",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(DialogTitle)
            id="form-dialog-title"
>
            Create a Ticket
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <form
                        autoComplete="off"
            >
                        <WithStyles(FormControl)>
                                    <TextField
                                                autoFocus={true}
                                                fullWidth={true}
                                                id="name"
                                                label="Title"
                                                margin="dense"
                                                onChange={[Function]}
                                                required={true}
                                                select={false}
                                                type="text"
                                                value="title"
                                    />
                        </WithStyles(FormControl)>
                        <WithStyles(FormControl)>
                                    <TextField
                                                fullWidth={true}
                                                id="multiline-flexible"
                                                label="Description"
                                                margin="dense"
                                                multiline={true}
                                                onChange={[Function]}
                                                required={false}
                                                select={false}
                                                value="description"
                                    />
                        </WithStyles(FormControl)>
                        <WithStyles(FormControl)>
                                    <WithStyles(InputLabel)
                                                htmlFor="age-simple"
                                    >
                                                Story Point
                                    </WithStyles(InputLabel)>
                                    <WithStyles(Select)
                                                inputProps={
                                                            Object {
                                                                        "id": "age-simple",
                                                                        "name": "age",
                                                                      }
                                                }
                                                onChange={[Function]}
                                                value={5}
                                    >
                                                <WithStyles(MenuItem)
                                                            value=""
                                                >
                                                            <em>
                                                                        None
                                                            </em>
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={0.1}
                                                >
                                                            0.1
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={1}
                                                >
                                                            1
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={2}
                                                >
                                                            2
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={3}
                                                >
                                                            3
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={5}
                                                >
                                                            5
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={8}
                                                >
                                                            8
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={13}
                                                >
                                                            13
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={21}
                                                >
                                                            21
                                                </WithStyles(MenuItem)>
                                    </WithStyles(Select)>
                        </WithStyles(FormControl)>
            </form>
</WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Create
            </WithStyles(Button)>
</WithStyles(DialogActions)>,
        ],
        "fullWidth": true,
        "onExit": [Function],
        "open": false,
        "title": "Dialog With Actions",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create a Ticket",
            "id": "form-dialog-title",
          },
          "ref": null,
          "rendered": "Create a Ticket",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              autoComplete="off"
>
              <WithStyles(FormControl)>
                            <TextField
                                          autoFocus={true}
                                          fullWidth={true}
                                          id="name"
                                          label="Title"
                                          margin="dense"
                                          onChange={[Function]}
                                          required={true}
                                          select={false}
                                          type="text"
                                          value="title"
                            />
              </WithStyles(FormControl)>
              <WithStyles(FormControl)>
                            <TextField
                                          fullWidth={true}
                                          id="multiline-flexible"
                                          label="Description"
                                          margin="dense"
                                          multiline={true}
                                          onChange={[Function]}
                                          required={false}
                                          select={false}
                                          value="description"
                            />
              </WithStyles(FormControl)>
              <WithStyles(FormControl)>
                            <WithStyles(InputLabel)
                                          htmlFor="age-simple"
                            >
                                          Story Point
                            </WithStyles(InputLabel)>
                            <WithStyles(Select)
                                          inputProps={
                                                        Object {
                                                                      "id": "age-simple",
                                                                      "name": "age",
                                                                    }
                                          }
                                          onChange={[Function]}
                                          value={5}
                            >
                                          <WithStyles(MenuItem)
                                                        value=""
                                          >
                                                        <em>
                                                                      None
                                                        </em>
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={0.1}
                                          >
                                                        0.1
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={1}
                                          >
                                                        1
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={2}
                                          >
                                                        2
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={3}
                                          >
                                                        3
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={5}
                                          >
                                                        5
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={8}
                                          >
                                                        8
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={13}
                                          >
                                                        13
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={21}
                                          >
                                                        21
                                          </WithStyles(MenuItem)>
                            </WithStyles(Select)>
              </WithStyles(FormControl)>
</form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "off",
              "children": Array [
                <WithStyles(FormControl)>
                  <TextField
                                    autoFocus={true}
                                    fullWidth={true}
                                    id="name"
                                    label="Title"
                                    margin="dense"
                                    onChange={[Function]}
                                    required={true}
                                    select={false}
                                    type="text"
                                    value="title"
                  />
</WithStyles(FormControl)>,
                <WithStyles(FormControl)>
                  <TextField
                                    fullWidth={true}
                                    id="multiline-flexible"
                                    label="Description"
                                    margin="dense"
                                    multiline={true}
                                    onChange={[Function]}
                                    required={false}
                                    select={false}
                                    value="description"
                  />
</WithStyles(FormControl)>,
                <WithStyles(FormControl)>
                  <WithStyles(InputLabel)
                                    htmlFor="age-simple"
                  >
                                    Story Point
                  </WithStyles(InputLabel)>
                  <WithStyles(Select)
                                    inputProps={
                                                      Object {
                                                                        "id": "age-simple",
                                                                        "name": "age",
                                                                      }
                                    }
                                    onChange={[Function]}
                                    value={5}
                  >
                                    <WithStyles(MenuItem)
                                                      value=""
                                    >
                                                      <em>
                                                                        None
                                                      </em>
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={0.1}
                                    >
                                                      0.1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={1}
                                    >
                                                      1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={2}
                                    >
                                                      2
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={3}
                                    >
                                                      3
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={5}
                                    >
                                                      5
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={8}
                                    >
                                                      8
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={13}
                                    >
                                                      13
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={21}
                                    >
                                                      21
                                    </WithStyles(MenuItem)>
                  </WithStyles(Select)>
</WithStyles(FormControl)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TextField
                    autoFocus={true}
                    fullWidth={true}
                    id="name"
                    label="Title"
                    margin="dense"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="text"
                    value="title"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "autoFocus": true,
                    "fullWidth": true,
                    "id": "name",
                    "label": "Title",
                    "margin": "dense",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "text",
                    "value": "title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TextField
                    fullWidth={true}
                    id="multiline-flexible"
                    label="Description"
                    margin="dense"
                    multiline={true}
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value="description"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fullWidth": true,
                    "id": "multiline-flexible",
                    "label": "Description",
                    "margin": "dense",
                    "multiline": true,
                    "onChange": [Function],
                    "required": false,
                    "select": false,
                    "value": "description",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(InputLabel)
                      htmlFor="age-simple"
>
                      Story Point
</WithStyles(InputLabel)>,
                    <WithStyles(Select)
                      inputProps={
                                            Object {
                                                                  "id": "age-simple",
                                                                  "name": "age",
                                                                }
                      }
                      onChange={[Function]}
                      value={5}
>
                      <WithStyles(MenuItem)
                                            value=""
                      >
                                            <em>
                                                                  None
                                            </em>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={0.1}
                      >
                                            0.1
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={1}
                      >
                                            1
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={2}
                      >
                                            2
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={3}
                      >
                                            3
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={5}
                      >
                                            5
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={8}
                      >
                                            8
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={13}
                      >
                                            13
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={21}
                      >
                                            21
                      </WithStyles(MenuItem)>
</WithStyles(Select)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Story Point",
                      "htmlFor": "age-simple",
                    },
                    "ref": null,
                    "rendered": "Story Point",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(MenuItem)
                          value=""
>
                          <em>
                                                    None
                          </em>
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={0.1}
>
                          0.1
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={1}
>
                          1
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={2}
>
                          2
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={3}
>
                          3
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={5}
>
                          5
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={8}
>
                          8
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={13}
>
                          13
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={21}
>
                          21
</WithStyles(MenuItem)>,
                      ],
                      "inputProps": Object {
                        "id": "age-simple",
                        "name": "age",
                      },
                      "onChange": [Function],
                      "value": 5,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <em>
                            None
</em>,
                          "value": "",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "None",
                          },
                          "ref": null,
                          "rendered": "None",
                          "type": "em",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "0.1",
                          "value": 0.1,
                        },
                        "ref": null,
                        "rendered": "0.1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "1",
                          "value": 1,
                        },
                        "ref": null,
                        "rendered": "1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "2",
                          "value": 2,
                        },
                        "ref": null,
                        "rendered": "2",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "3",
                          "value": 3,
                        },
                        "ref": null,
                        "rendered": "3",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "5",
                          "value": 5,
                        },
                        "ref": null,
                        "rendered": "5",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "8",
                          "value": 8,
                        },
                        "ref": null,
                        "rendered": "8",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "13",
                          "value": 13,
                        },
                        "ref": null,
                        "rendered": "13",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "21",
                          "value": 21,
                        },
                        "ref": null,
                        "rendered": "21",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Cancel
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Create
</WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Create",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Create",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`describe when the AddTicketDialog Component is given open as true AddTicketDialog should show the addTicketDialog open property as true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddTicketDialog
    addTicket={[Function]}
    description="description"
    onRequestClose={[Function]}
    open={true}
    setDescription={[Function]}
    setStoryPoint={[Function]}
    setTitle={[Function]}
    storyPoint={5}
    title="title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(DialogTitle)
          id="form-dialog-title"
>
          Create a Ticket
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <form
                    autoComplete="off"
          >
                    <WithStyles(FormControl)>
                              <TextField
                                        autoFocus={true}
                                        fullWidth={true}
                                        id="name"
                                        label="Title"
                                        margin="dense"
                                        onChange={[Function]}
                                        required={true}
                                        select={false}
                                        type="text"
                                        value="title"
                              />
                    </WithStyles(FormControl)>
                    <WithStyles(FormControl)>
                              <TextField
                                        fullWidth={true}
                                        id="multiline-flexible"
                                        label="Description"
                                        margin="dense"
                                        multiline={true}
                                        onChange={[Function]}
                                        required={false}
                                        select={false}
                                        value="description"
                              />
                    </WithStyles(FormControl)>
                    <WithStyles(FormControl)>
                              <WithStyles(InputLabel)
                                        htmlFor="age-simple"
                              >
                                        Story Point
                              </WithStyles(InputLabel)>
                              <WithStyles(Select)
                                        inputProps={
                                                  Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                                        }
                                        onChange={[Function]}
                                        value={5}
                              >
                                        <WithStyles(MenuItem)
                                                  value=""
                                        >
                                                  <em>
                                                            None
                                                  </em>
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={0.1}
                                        >
                                                  0.1
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={1}
                                        >
                                                  1
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={2}
                                        >
                                                  2
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={3}
                                        >
                                                  3
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={5}
                                        >
                                                  5
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={8}
                                        >
                                                  8
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={13}
                                        >
                                                  13
                                        </WithStyles(MenuItem)>
                                        <WithStyles(MenuItem)
                                                  value={21}
                                        >
                                                  21
                                        </WithStyles(MenuItem)>
                              </WithStyles(Select)>
                    </WithStyles(FormControl)>
          </form>
</WithStyles(DialogContent)>,
        <WithStyles(DialogActions)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Cancel
          </WithStyles(Button)>
          <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
          >
                    Create
          </WithStyles(Button)>
</WithStyles(DialogActions)>,
      ],
      "fullWidth": true,
      "onExit": [Function],
      "open": true,
      "title": "Dialog With Actions",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Create a Ticket",
          "id": "form-dialog-title",
        },
        "ref": null,
        "rendered": "Create a Ticket",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            autoComplete="off"
>
            <WithStyles(FormControl)>
                        <TextField
                                    autoFocus={true}
                                    fullWidth={true}
                                    id="name"
                                    label="Title"
                                    margin="dense"
                                    onChange={[Function]}
                                    required={true}
                                    select={false}
                                    type="text"
                                    value="title"
                        />
            </WithStyles(FormControl)>
            <WithStyles(FormControl)>
                        <TextField
                                    fullWidth={true}
                                    id="multiline-flexible"
                                    label="Description"
                                    margin="dense"
                                    multiline={true}
                                    onChange={[Function]}
                                    required={false}
                                    select={false}
                                    value="description"
                        />
            </WithStyles(FormControl)>
            <WithStyles(FormControl)>
                        <WithStyles(InputLabel)
                                    htmlFor="age-simple"
                        >
                                    Story Point
                        </WithStyles(InputLabel)>
                        <WithStyles(Select)
                                    inputProps={
                                                Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                                    }
                                    onChange={[Function]}
                                    value={5}
                        >
                                    <WithStyles(MenuItem)
                                                value=""
                                    >
                                                <em>
                                                            None
                                                </em>
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={0.1}
                                    >
                                                0.1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={1}
                                    >
                                                1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={2}
                                    >
                                                2
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={3}
                                    >
                                                3
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={5}
                                    >
                                                5
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={8}
                                    >
                                                8
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={13}
                                    >
                                                13
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                value={21}
                                    >
                                                21
                                    </WithStyles(MenuItem)>
                        </WithStyles(Select)>
            </WithStyles(FormControl)>
</form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              <WithStyles(FormControl)>
                <TextField
                                autoFocus={true}
                                fullWidth={true}
                                id="name"
                                label="Title"
                                margin="dense"
                                onChange={[Function]}
                                required={true}
                                select={false}
                                type="text"
                                value="title"
                />
</WithStyles(FormControl)>,
              <WithStyles(FormControl)>
                <TextField
                                fullWidth={true}
                                id="multiline-flexible"
                                label="Description"
                                margin="dense"
                                multiline={true}
                                onChange={[Function]}
                                required={false}
                                select={false}
                                value="description"
                />
</WithStyles(FormControl)>,
              <WithStyles(FormControl)>
                <WithStyles(InputLabel)
                                htmlFor="age-simple"
                >
                                Story Point
                </WithStyles(InputLabel)>
                <WithStyles(Select)
                                inputProps={
                                                Object {
                                                                "id": "age-simple",
                                                                "name": "age",
                                                              }
                                }
                                onChange={[Function]}
                                value={5}
                >
                                <WithStyles(MenuItem)
                                                value=""
                                >
                                                <em>
                                                                None
                                                </em>
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={0.1}
                                >
                                                0.1
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={1}
                                >
                                                1
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={2}
                                >
                                                2
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={3}
                                >
                                                3
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={5}
                                >
                                                5
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={8}
                                >
                                                8
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={13}
                                >
                                                13
                                </WithStyles(MenuItem)>
                                <WithStyles(MenuItem)
                                                value={21}
                                >
                                                21
                                </WithStyles(MenuItem)>
                </WithStyles(Select)>
</WithStyles(FormControl)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextField
                  autoFocus={true}
                  fullWidth={true}
                  id="name"
                  label="Title"
                  margin="dense"
                  onChange={[Function]}
                  required={true}
                  select={false}
                  type="text"
                  value="title"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "autoFocus": true,
                  "fullWidth": true,
                  "id": "name",
                  "label": "Title",
                  "margin": "dense",
                  "onChange": [Function],
                  "required": true,
                  "select": false,
                  "type": "text",
                  "value": "title",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TextField
                  fullWidth={true}
                  id="multiline-flexible"
                  label="Description"
                  margin="dense"
                  multiline={true}
                  onChange={[Function]}
                  required={false}
                  select={false}
                  value="description"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "fullWidth": true,
                  "id": "multiline-flexible",
                  "label": "Description",
                  "margin": "dense",
                  "multiline": true,
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "value": "description",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(InputLabel)
                    htmlFor="age-simple"
>
                    Story Point
</WithStyles(InputLabel)>,
                  <WithStyles(Select)
                    inputProps={
                                        Object {
                                                            "id": "age-simple",
                                                            "name": "age",
                                                          }
                    }
                    onChange={[Function]}
                    value={5}
>
                    <WithStyles(MenuItem)
                                        value=""
                    >
                                        <em>
                                                            None
                                        </em>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={0.1}
                    >
                                        0.1
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={1}
                    >
                                        1
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={2}
                    >
                                        2
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={3}
                    >
                                        3
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={5}
                    >
                                        5
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={8}
                    >
                                        8
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={13}
                    >
                                        13
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                                        value={21}
                    >
                                        21
                    </WithStyles(MenuItem)>
</WithStyles(Select)>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Story Point",
                    "htmlFor": "age-simple",
                  },
                  "ref": null,
                  "rendered": "Story Point",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(MenuItem)
                        value=""
>
                        <em>
                                                None
                        </em>
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={0.1}
>
                        0.1
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={1}
>
                        1
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={2}
>
                        2
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={3}
>
                        3
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={5}
>
                        5
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={8}
>
                        8
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={13}
>
                        13
</WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        value={21}
>
                        21
</WithStyles(MenuItem)>,
                    ],
                    "inputProps": Object {
                      "id": "age-simple",
                      "name": "age",
                    },
                    "onChange": [Function],
                    "value": 5,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <em>
                          None
</em>,
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "None",
                        },
                        "ref": null,
                        "rendered": "None",
                        "type": "em",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "0.1",
                        "value": 0.1,
                      },
                      "ref": null,
                      "rendered": "0.1",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "1",
                        "value": 1,
                      },
                      "ref": null,
                      "rendered": "1",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "2",
                        "value": 2,
                      },
                      "ref": null,
                      "rendered": "2",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "3",
                        "value": 3,
                      },
                      "ref": null,
                      "rendered": "3",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "5",
                        "value": 5,
                      },
                      "ref": null,
                      "rendered": "5",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "8",
                        "value": 8,
                      },
                      "ref": null,
                      "rendered": "8",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "13",
                        "value": 13,
                      },
                      "ref": null,
                      "rendered": "13",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "21",
                        "value": 21,
                      },
                      "ref": null,
                      "rendered": "21",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Cancel
</WithStyles(Button)>,
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
>
              Create
</WithStyles(Button)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Cancel",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Create",
              "color": "primary",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Create",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(DialogTitle)
            id="form-dialog-title"
>
            Create a Ticket
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <form
                        autoComplete="off"
            >
                        <WithStyles(FormControl)>
                                    <TextField
                                                autoFocus={true}
                                                fullWidth={true}
                                                id="name"
                                                label="Title"
                                                margin="dense"
                                                onChange={[Function]}
                                                required={true}
                                                select={false}
                                                type="text"
                                                value="title"
                                    />
                        </WithStyles(FormControl)>
                        <WithStyles(FormControl)>
                                    <TextField
                                                fullWidth={true}
                                                id="multiline-flexible"
                                                label="Description"
                                                margin="dense"
                                                multiline={true}
                                                onChange={[Function]}
                                                required={false}
                                                select={false}
                                                value="description"
                                    />
                        </WithStyles(FormControl)>
                        <WithStyles(FormControl)>
                                    <WithStyles(InputLabel)
                                                htmlFor="age-simple"
                                    >
                                                Story Point
                                    </WithStyles(InputLabel)>
                                    <WithStyles(Select)
                                                inputProps={
                                                            Object {
                                                                        "id": "age-simple",
                                                                        "name": "age",
                                                                      }
                                                }
                                                onChange={[Function]}
                                                value={5}
                                    >
                                                <WithStyles(MenuItem)
                                                            value=""
                                                >
                                                            <em>
                                                                        None
                                                            </em>
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={0.1}
                                                >
                                                            0.1
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={1}
                                                >
                                                            1
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={2}
                                                >
                                                            2
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={3}
                                                >
                                                            3
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={5}
                                                >
                                                            5
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={8}
                                                >
                                                            8
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={13}
                                                >
                                                            13
                                                </WithStyles(MenuItem)>
                                                <WithStyles(MenuItem)
                                                            value={21}
                                                >
                                                            21
                                                </WithStyles(MenuItem)>
                                    </WithStyles(Select)>
                        </WithStyles(FormControl)>
            </form>
</WithStyles(DialogContent)>,
          <WithStyles(DialogActions)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Cancel
            </WithStyles(Button)>
            <WithStyles(Button)
                        color="primary"
                        onClick={[Function]}
            >
                        Create
            </WithStyles(Button)>
</WithStyles(DialogActions)>,
        ],
        "fullWidth": true,
        "onExit": [Function],
        "open": true,
        "title": "Dialog With Actions",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Create a Ticket",
            "id": "form-dialog-title",
          },
          "ref": null,
          "rendered": "Create a Ticket",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              autoComplete="off"
>
              <WithStyles(FormControl)>
                            <TextField
                                          autoFocus={true}
                                          fullWidth={true}
                                          id="name"
                                          label="Title"
                                          margin="dense"
                                          onChange={[Function]}
                                          required={true}
                                          select={false}
                                          type="text"
                                          value="title"
                            />
              </WithStyles(FormControl)>
              <WithStyles(FormControl)>
                            <TextField
                                          fullWidth={true}
                                          id="multiline-flexible"
                                          label="Description"
                                          margin="dense"
                                          multiline={true}
                                          onChange={[Function]}
                                          required={false}
                                          select={false}
                                          value="description"
                            />
              </WithStyles(FormControl)>
              <WithStyles(FormControl)>
                            <WithStyles(InputLabel)
                                          htmlFor="age-simple"
                            >
                                          Story Point
                            </WithStyles(InputLabel)>
                            <WithStyles(Select)
                                          inputProps={
                                                        Object {
                                                                      "id": "age-simple",
                                                                      "name": "age",
                                                                    }
                                          }
                                          onChange={[Function]}
                                          value={5}
                            >
                                          <WithStyles(MenuItem)
                                                        value=""
                                          >
                                                        <em>
                                                                      None
                                                        </em>
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={0.1}
                                          >
                                                        0.1
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={1}
                                          >
                                                        1
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={2}
                                          >
                                                        2
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={3}
                                          >
                                                        3
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={5}
                                          >
                                                        5
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={8}
                                          >
                                                        8
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={13}
                                          >
                                                        13
                                          </WithStyles(MenuItem)>
                                          <WithStyles(MenuItem)
                                                        value={21}
                                          >
                                                        21
                                          </WithStyles(MenuItem)>
                            </WithStyles(Select)>
              </WithStyles(FormControl)>
</form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "off",
              "children": Array [
                <WithStyles(FormControl)>
                  <TextField
                                    autoFocus={true}
                                    fullWidth={true}
                                    id="name"
                                    label="Title"
                                    margin="dense"
                                    onChange={[Function]}
                                    required={true}
                                    select={false}
                                    type="text"
                                    value="title"
                  />
</WithStyles(FormControl)>,
                <WithStyles(FormControl)>
                  <TextField
                                    fullWidth={true}
                                    id="multiline-flexible"
                                    label="Description"
                                    margin="dense"
                                    multiline={true}
                                    onChange={[Function]}
                                    required={false}
                                    select={false}
                                    value="description"
                  />
</WithStyles(FormControl)>,
                <WithStyles(FormControl)>
                  <WithStyles(InputLabel)
                                    htmlFor="age-simple"
                  >
                                    Story Point
                  </WithStyles(InputLabel)>
                  <WithStyles(Select)
                                    inputProps={
                                                      Object {
                                                                        "id": "age-simple",
                                                                        "name": "age",
                                                                      }
                                    }
                                    onChange={[Function]}
                                    value={5}
                  >
                                    <WithStyles(MenuItem)
                                                      value=""
                                    >
                                                      <em>
                                                                        None
                                                      </em>
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={0.1}
                                    >
                                                      0.1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={1}
                                    >
                                                      1
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={2}
                                    >
                                                      2
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={3}
                                    >
                                                      3
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={5}
                                    >
                                                      5
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={8}
                                    >
                                                      8
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={13}
                                    >
                                                      13
                                    </WithStyles(MenuItem)>
                                    <WithStyles(MenuItem)
                                                      value={21}
                                    >
                                                      21
                                    </WithStyles(MenuItem)>
                  </WithStyles(Select)>
</WithStyles(FormControl)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TextField
                    autoFocus={true}
                    fullWidth={true}
                    id="name"
                    label="Title"
                    margin="dense"
                    onChange={[Function]}
                    required={true}
                    select={false}
                    type="text"
                    value="title"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "autoFocus": true,
                    "fullWidth": true,
                    "id": "name",
                    "label": "Title",
                    "margin": "dense",
                    "onChange": [Function],
                    "required": true,
                    "select": false,
                    "type": "text",
                    "value": "title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TextField
                    fullWidth={true}
                    id="multiline-flexible"
                    label="Description"
                    margin="dense"
                    multiline={true}
                    onChange={[Function]}
                    required={false}
                    select={false}
                    value="description"
/>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fullWidth": true,
                    "id": "multiline-flexible",
                    "label": "Description",
                    "margin": "dense",
                    "multiline": true,
                    "onChange": [Function],
                    "required": false,
                    "select": false,
                    "value": "description",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(InputLabel)
                      htmlFor="age-simple"
>
                      Story Point
</WithStyles(InputLabel)>,
                    <WithStyles(Select)
                      inputProps={
                                            Object {
                                                                  "id": "age-simple",
                                                                  "name": "age",
                                                                }
                      }
                      onChange={[Function]}
                      value={5}
>
                      <WithStyles(MenuItem)
                                            value=""
                      >
                                            <em>
                                                                  None
                                            </em>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={0.1}
                      >
                                            0.1
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={1}
                      >
                                            1
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={2}
                      >
                                            2
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={3}
                      >
                                            3
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={5}
                      >
                                            5
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={8}
                      >
                                            8
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={13}
                      >
                                            13
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                                            value={21}
                      >
                                            21
                      </WithStyles(MenuItem)>
</WithStyles(Select)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Story Point",
                      "htmlFor": "age-simple",
                    },
                    "ref": null,
                    "rendered": "Story Point",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <WithStyles(MenuItem)
                          value=""
>
                          <em>
                                                    None
                          </em>
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={0.1}
>
                          0.1
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={1}
>
                          1
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={2}
>
                          2
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={3}
>
                          3
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={5}
>
                          5
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={8}
>
                          8
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={13}
>
                          13
</WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          value={21}
>
                          21
</WithStyles(MenuItem)>,
                      ],
                      "inputProps": Object {
                        "id": "age-simple",
                        "name": "age",
                      },
                      "onChange": [Function],
                      "value": 5,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <em>
                            None
</em>,
                          "value": "",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "None",
                          },
                          "ref": null,
                          "rendered": "None",
                          "type": "em",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "0.1",
                          "value": 0.1,
                        },
                        "ref": null,
                        "rendered": "0.1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "1",
                          "value": 1,
                        },
                        "ref": null,
                        "rendered": "1",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "2",
                          "value": 2,
                        },
                        "ref": null,
                        "rendered": "2",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "3",
                          "value": 3,
                        },
                        "ref": null,
                        "rendered": "3",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "5",
                          "value": 5,
                        },
                        "ref": null,
                        "rendered": "5",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "8",
                          "value": 8,
                        },
                        "ref": null,
                        "rendered": "8",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "13",
                          "value": 13,
                        },
                        "ref": null,
                        "rendered": "13",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "21",
                          "value": 21,
                        },
                        "ref": null,
                        "rendered": "21",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Cancel
</WithStyles(Button)>,
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
>
                Create
</WithStyles(Button)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Create",
                "color": "primary",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Create",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
