{"version":3,"sources":["webpack:///./core/actions/thunkActions/database/fetchTickets.ts","webpack:///./index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAGc;AACV,WAAO,UAAgB,QAAhB,EAAwB;;;;;;AAChB,mCAAM,qEAAN;;AAAL,6BAAK,SAAL;AACU,mCAAM,GAAG,UAAH,EAAN;;AAAV,kCAAU,SAAV;AACN,iCAAS,oDAAW,OAAX,CAAmB,UAAnB,CAA8B,EAAE,SAAS,OAAX,EAA9B,CAAT;;;;;AACH,KAJD;AAKH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZD;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,+DAAe,mDAAf,E","file":"main.ecf2357ff958718243dc.hot-update.js","sourcesContent":["import { ThunkAction } from \"redux-thunk\";\nimport AppStateCore from \"../../../store/AppState\";\nimport { getRemoteDB } from \"../../../database/pouch\";\nimport ticketList from \"../../ticketList\";\nimport { AnyAction } from \"redux\";\n\nexport default function fetchTickets(): ThunkAction<void, AppStateCore, void, AnyAction> {\n    return async function (dispatch) {\n        const db = await getRemoteDB();\n        const tickets = await db.getTickets();\n        dispatch(ticketList.actions.setTickets({ tickets: tickets as any }));\n    };\n}\n","import reduxStore from './core/store';\nimport addTicketActionsReducers from './core/actions/addTicket';\nimport loadingActionsReducers from './core/actions/loading';\nimport routingActionsReducers from './core/actions/routing';\nimport ticketListActionsReducers from './core/actions/ticketList';\nimport thunkActions from './core/actions/thunkActions';\n\nexport { addTicketActionsReducers, loadingActionsReducers, routingActionsReducers, ticketListActionsReducers, thunkActions };\n// export * from './core/actions';\n\nexport default reduxStore;\n"],"sourceRoot":""}